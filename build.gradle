// plugins {
//   id 'org.springframework.boot' version '3.0.1'
//   id 'io.spring.dependency-management' version '1.1.0'
//   id 'java'
// }

// apply plugin: 'java'

// group = 'org.springframework.samples'
// version = '3.0.0'
// sourceCompatibility = '11'

// repositories {
//   mavenCentral()
// }

// ext.webjarsFontawesomeVersion = "4.7.0"
// ext.webjarsBootstrapVersion = "5.1.3"

// dependencies {
//   implementation 'org.springframework.boot:spring-boot-starter-cache'
//   implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//   implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
//   implementation 'org.springframework.boot:spring-boot-starter-web'
//   implementation 'org.springframework.boot:spring-boot-starter-validation'
//   implementation 'javax.cache:cache-api'
//   implementation 'jakarta.xml.bind:jakarta.xml.bind-api'
//   runtimeOnly 'org.springframework.boot:spring-boot-starter-actuator'
//   runtimeOnly "org.webjars.npm:bootstrap:${webjarsBootstrapVersion}"
//   runtimeOnly "org.webjars.npm:font-awesome:${webjarsFontawesomeVersion}"
//   runtimeOnly 'com.github.ben-manes.caffeine:caffeine'
//   runtimeOnly 'com.h2database:h2'
//   runtimeOnly 'com.mysql:mysql-connector-j'
//   runtimeOnly 'org.postgresql:postgresql'
//   developmentOnly 'org.springframework.boot:spring-boot-devtools'
//   testImplementation 'org.springframework.boot:spring-boot-starter-test'
// }

// tasks.named('test') {
//   useJUnitPlatform()
// }
plugins {
	id 'org.springframework.boot' version '2.5.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'war'
	id 'org.sonarqube' version '3.3'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
	useJUnitPlatform()
}


sonarqube {
    properties {
        property 'sonar.host.url', 'http://34.125.201.58:9000'
        property 'sonar.login', '******'
    }
}